import time
import os
import json
from sabdaprocessor import Transliterator
from final_year_project import settings


def main(word):
    data = []
    file_set = set(line.strip() for line in open(os.path.join(settings.STATIC_DIR, "ne_NP_new.dic"), "r", encoding="utf8"))

    d = Transliterator.Transliterator(word).combine_tokens()

    for w in search(s, file_set):
        for i in file_set:
            if ld(w, i) <= 1:
                data.append(w)

    return json.dumps(data)

def transliterate(word):
    return json.dumps(Transliterator.Transliterator(word).get_filtered_combinations())

def search(d, set):
    for w in d:
        if w in set:
            yield w

def ld(s, t):
    s = ' ' + s
    t = ' ' + t
    d = {}
    for i in range(len(s)):
        d[i, 0] = i
    for j in range(len(t)):
        d[0, j] = j
    for j in range(1, len(t)):
        for i in range(1, len(s)):
            if s[i] == t[j]:
                d[i, j] = d[i - 1, j - 1]
            else:
                d[i, j] = min(d[i - 1, j], d[i, j - 1], d[i - 1, j - 1]) + 1
    return d[len(s) - 1, len(t) - 1]
